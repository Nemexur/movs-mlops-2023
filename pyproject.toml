[tool.poetry]
name = "movs-mlops-2023"
version = "0.0.1"
description = ""
authors = ["nemexur <alex.milogradsky@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">3.10,<=3.13"
numpy = "^1.26.2"
pandas = "^2.1.3"
scikit-learn = "^1.3.2"
torch = "^2.1.1"
click = "^8.1.7"

[tool.poetry.group.exp.dependencies]
loguru = "^0.7.2"
tqdm = "^4.66.1"
pyyaml = "^6.0.1"
rich = "^13.7.0"
jinja2 = "^3.1.2"
hydra-core = "^1.3.2"
pytorch-ignite = "^0.4.13"
accelerate = "^0.25.0"
safetensors = "^0.4.1"
wandb = "^0.16.1"

[tool.poetry.group.dev.dependencies]
ipython = "^8.18.1"
ruff = "^0.1.6"
pylint = "^3.0.2"
jupyterlab = "^4.0.9"
dvc = "^3.30.3"
dvc-gdrive = "^2.20.0"

[tool.pyright]
reportGeneralTypeIssues = false

[tool.black]
line-length = 100

[tool.isort]
py_version = 310
profile = "black"
line_length = 100
force_to_top = ["typing"]
order_by_type = true
combine_as_imports = true
force_sort_within_sections = true
skip_glob = ["**/__init__.py"]

[tool.ruff]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "C",    # flake8-comprehensions
    "B",    # flake8-bugbear
    "S",    # flake8-bandit
    "PT",   # flake8-pytest-style
    "SLF",  # flake8-self
    "SIM",  # flake8-simplify
    "NPY",  # NumPy-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "S105",  # ignore hardcoded password
    "S101",  # ignore use of assert
    "E741",  # allow l and o variable names
]
line-length = 100
target-version = "py310"

[tool.ruff.extend-per-file-ignores]
"__init__.py" = ["F401"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
